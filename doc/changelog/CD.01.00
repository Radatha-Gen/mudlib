CHANGES applied to get version 1.0 of the CD Mudlib
===================================================

For some obscure and dubious reasons, changes between the versions 00.28,
00.29, 00.30 and 00.31 beta have not been logged by the people previously
responsible for the mudlib releases. Some of the changes mentioned in this
document therefore may have been applied earlier than version 1.0 and it is
unfortunately also possible that changes made to the mudlib recently have
not been included in this document. My apologies for that.

We have received various good stuff from people and comments, bug fixes and
ideas. Thanks go to (alphabeticall) Aridor, Cygnus (from Synergy, who also
does some major GameDriver hacking, btw), Maniac, Marvin, Mrpr, Olorin,
Plarry (from Muddy Waters), Plugh (who after his major GameDriver hacking
incorporated the necessary changes to the mudlib), Rastlin, Sorgum, Tintin
and Xarguul. Hope I did not forget anyone important ;-)

/Mercade

This document is organized like the major mudlib directories. If changes
extend over multiple files, this is duly noted. Throughout the mudlib use
of the (obsolete) efun call_out has been replaced with alarms. Marvin created
a new variable type 'function'. This construct is now used with add_actions,
alarms, filters, etcetera, in many of the mudlib files, for which Plugh did
most changes. No reference of these global changes is made further.

/cmd/wiz_cmd_*.c

    Moved to /cmd/wiz/*.c

/cmd/live/info.c

    Report commands (bug/idea/praise/sysbug/typo) merged internally. New
    commands sysidea, syspraise and systypo added. The sys-reports are now
    in the open log directory.

/cmd/live/social.c

    Added an 'assist' command that will allow you to enter combat with the
    enemy of a friend of yours. Added 'mwho' for 'who' with more. New
    switches added to 'who', see their help-pages. New command 'last' to
    keep track of people you have met.

/cmd/live/state.c

    New commands 'morelen' and 'screenwidth' that allow the player to set
    respectively the page-length of his/her screen and the number of
    characters to be printed to the screen of the player. Command 'health'
    received from Synergy.

/cmd/live/things.c

    Command 'inventory' can now be used by wizards to see the inventory of
    other livings as well. Commands 'keep' and 'unkeep' added to allow
    players to set/remove sell-protection on various items.

/cmd/std/command_driver.c

    Some overhead kicked out for speed reasons. Added parse_adverb() and
    parse_adverb_with_space() functions for better adverb parsing from
    emotions. This also allows inheriting guild-souls to use this system.
    New system of hooks for emotions performed on NPC's to reduce text
    printed to them.

/cmd/std/soul_cmd.c

    Revision of most emotions (added a few dozen new too) to allow for
    better adverb parsing. The adverbs are taken out and put into a new
    file (adverbs.h). Function dump_emotions() to make a nice list of the
    emotions. There finally is a help page about each individual emotion as
    well. It contains a description of its syntax. For the meaning of the
    emotions, use your imagination.

/cmd/std/tracer_tool.c

    New commands 'At', 'Cat', 'Clean', 'Ed', 'Info', 'Items', 'Light',
    'More', 'Move' and 'Tail'. See their help-pages.

/cmd/wiz/apprentice.c

    Split the whole stuff into separate files since it became too large.
    The sub-parts are located in /cmd/wiz/apprentice/*.c. New features added
    to 'cd', 'goto', 'people'. New command 'people_guild' for arches (++) to
    manage the guild-list of the 'people' command. New command 'guildtell'
    to tell all members in a guild. Commands 'combatdata' (cbd), 'combatstat'
    (cbs), 'skillstat', 'stat' and 'tradestat' moved to normal.c since we do
    not think apprentices need to be able to find out all about objects.
    New commands 'line', 'linee', 'dtell' and 'dtelle' as talk-lines and
    domain tell lines. Command 'lineconfig' to configurate the lines.
    Originally coded by Windwalker, then re-vitalized by Sorgum. This is a
    completely new implemenation though. Command 'graph' to display a user
    graph, 'last' to find out about players login time, 'tree' to print a
    directory tree and 'whereis' to find out about the location of a player
    in the game from Nosferatu's survival kit.

/cmd/wiz/apprentice/communication.c (NEW FILE)
/cmd/wiz/apprentice/files.c (NEW FILE)
/cmd/wiz/apprentice/manual.c (NEW FILE)
/cmd/wiz/apprentice/people.c (NEW FILE)

    These new files are modules to the apprentice soul.

/cmd/wiz/arch.c

    Added command 'vip' to allow people VIP access in the queue, 'purge' to
    purge all players that have been idle too long or remove one player from
    the game, 'namechange' to change the name of a player, 'unmadwand' to
    change a madwand into a normal wizard.

/cmd/wiz/keeper.c

    Keepers finally have their own private command. It can be used to promote
    an archwizard to keeper and vice versa, so this does not need to be done
    by hacking the KEEPERSAVE anymore.

/cmd/wiz/mbs.c (NEW OBJECT)

    Mrpr's handy board reading soul merged into the mudlib. This board reader
    will be in the wizards souls by default.

/cmd/wiz/normal.c

    Added command 'peace' to make peace for someone or for yourself. Command
    'shutdown' handled by Armageddon too now. Exec contains 13 mixed
    variables by default and may contain calls to the tracer tool format
    with parse_arg(). Also allows for a personal set of definitions in
    ~/<wizard-name>.h and a default /sys/exec.h [idea by Aridor] and it will
    display the return value from a 'return' statement in the 'exec' from
    Synergy. See the appropriate help pages for more information. Command
    'runlog' to check runtime error logfiles. Also split. Sub-parts in
    /cmd/wiz/normal/*.c. Command 'load' will now update an already loaded
    file and now has wildcard support. Command 'money' to clone/destruct
    money. Command 'retire' to retire from coding.

/cmd/wiz/normal/edit.c (NEW FILE)
/cmd/wiz/normal/files.c (NEW FILE)

    These new files are modules to the normal wizards command soul.

/cmd/wiz/lord.c

    Added a liege-line ('liege' and 'liegee'). Lieges and higher can use it
    to speak with eachother about things that normal wizards should not
    hear. Command 'trainee' to manage trainees in the domain. Lieges may
    now draft madwands with the command 'accept' rather than with 'promote'
    as they used to.

/config.std/aliases (NEW DIRECTORY)

    New directory in which the global (mail) aliases should be placed. The
    files in that directory should contain a list of the people in the alias,
    separated by newlines. The filename is the alias name.

/config.std/login/login.h

    Added macro mapping RACES_SHORT used by /cmd/wiz/apprentice/people.c

/config.std/race/generic.c

    Moved the say-command to /std/living/cmdhooks.c

/config.std/sys/local.h

    Pay good attention to this module as various definitions have been added
    and some others removed.

/config.std/sys/mail2.h (NEW FILE)

    Mud specific mail definitions.

/config.std/sys/mbs2.h (NEW FILE)

    Mud specific MBS definitions.

/config.std/sys/money2.h

    Added macro MONEY_LOG_LIMIT used by /std/coins.c

/config.std/sys/wa_types2.h

    Added macro W_NAMES used in weapon_type() in /std/weapon.c

/doc/*

    All changes to commands should be changed to their respective help files
    and naturally many new help files were created too. All emotions now have
    their own help file. Efuns, definitions, the general manual: they all got
    their fair share of changes. Various functions have gotten new or improved
    headers too, so it is advisable to remove your sman tree and have a new
    one created.

/doc/man/technical/* (NEW DIRECTORY)

    In this directory you shall find some technical documentation files that
    cover the inner working of the mudlib and the reasons some systems were
    majorly changed. For now, the new sanction structure and skill decay are
    explained here.

/lib/cache.c (NEW OBJECT)

    A read cache for data structures that are retrieved via restore_map().
    They can dramatically reduce disk-access in modules that require a data
    file to be loaded each time a function is performed. In Genesis I got a
    2700% speed increase (!) in one module by only replacing calls to the
    efun restore_map() to read_cache().

/lib/keep.c (NEW OBJECT)

    Inheriting this library will make the object keepable, i.e. responding
    to the commands 'keep' and 'unkeep'.

/lib/more.c (REMOVED)

    More was implemented in three places. Now it only resides in the player
    object.

/lib/shop.c

    Added a command 'show' that allows you to appraise an object for sale
    while it is still in the care of the shop.

/lib/skill_raise.c

    Second argument 'silent' added to sk_query_max() used in skill decay.

/lib/time.c (MOVED to /sys/global)

/obj/data_edit.c (NEW OBJECT)

    An editor for LPC datafiles, i.e .o files. This to prevent people from
    having to ftp files locally and edit them there since ed has a problem
    with datastructures larger than 256 characters.

/obj/edit.c (NEW OBJECT)

    A line editor, used by boards and various other stuff that allows people
    to enter multiple lines, like exec, logs etc.

/players/mail/a through /players/mail/z (NEW DIRECTORIES)

    In these directories the mail-boxes will be stored for the players.

/players/messages/d0 through /players/messages/d29 (NEW DIRECTORIES)

    In these directories the message files for the individual mail messages
    are stored. Note that the system is currently configured for a hash-size
    of 30. If you raise the hash-size, you must create more directories.

/secure/armageddon.c (complete revision)

    All shutdown is handled by this object now, included the wizards
    'shutdown' command. This guarantees that recovery is always active.
    The shutdown-message is not displayed every minute anymore.

/secure/editor.c (NEW OBJECT)

    This object will be able to read from the ~/private directory of a
    'full' wizard to perform the '~m' import option of the editor.

/secure/login.c (complete revision)

    Adapted to the queue. When the game is being shut down, no new players
    (and wizards below normal wizard) are allowed to log in. When in the
    queue, the player has the commands 'date' and 'who'. Also, mail info
    is given. Password checking enhanced. People are forced to change their
    password at least once every 6 months [see config.std/sys/local.h] and
    before a password is accepted, some requirements must be met. Relay
    support removed.

/secure/mail_checker.c (NEW OBJECT)

    A module that can be used to check the mail status of a player and it
    contains the mail management code. Its name might seem a bit strange,
    but in Genesis we used to have a mail-checker for a long time before
    the mail management code was added and I didn't want to chance the name.

/secure/mail_reader.c (NEW OBJECT)

    A great mail reader. We used it in Genesis for quite some time, and now
    it is recoded, we think you should benefit from it too. If you used the
    old mail reader with one file per mailbox, contact me for a conversion
    tool.

/secure/master.c
   
    Runtime errors are logged now if they are not printed to wizards. They
    will be put in the appropriate log directory. Many new functions called
    by the driver. FTP logging enabled. Domains have a /private/ directory
    where non-members have no read or write access. The directory /domain/
    is write-only to the Lord, but readable as any common domain directory.

/secure/master.h (NEW FILE)

    New file containing all prototypes used in the master.c and master/*.c.

/secure/mbs_central.c (NEW OBJECT)

    The central part of the mbs soul, keeping track of the boards. It also
    replaces the old /std/board/board_central.c.

/secure/mbs.h (NEW FILE)

    Header file for the mbs system.

/secure/player_tool.c (NEW OBJECT)

    This object can be used by helpers to the playerarch to transfer files
    between the secured directory for playerfiles /players and their
    private directory. Only arch-helpers registered in the tool and
    naturally arches and keepers may use it.

/secure/queue.c (NEW OBJECT)

    This object will manage the queue of the game when it became too popular
    to allow all people access who want to have it. It supports VIP-access
    for people who may bypass the queue. Full wizards do not have to queue.
    Original code by Tintin.

/secure/std.h (MOVED to /sys)

/secure/master/faircombat.c (REMOVED)

/secure/master/flags.c (REMOVED)

/secure/master/fob.c (complete revision)

    Added function query_wiz_rank(). This function returns the rank of a
    player. The function query_wiz_level() should never be used again to
    determine the privileges of a wizard. Most mudlib files use this new
    function now. A new level/rank system that separates rank from level.
    Support from 'trainees', apprentice domain-members. They only have
    write access to their own directory. New rank 'steward' [assistant Lord]
    created.

/secure/master/manage_maplinks.c (REMOVED)

/secure/master/notify.c

    The code for the user graph. added. This graph can print information
    about the number of players in the game [per rank], people in the queue
    and the last 20 reboots.

/secure/master/sanction.c (NEW FILE)

    This module contains the new sanction system. Sanctions are now handled
    by a tree on disk. [See /doc/man/technical/sanctions]

/std/armour.c

    Added default recovery. If you have an autoloading armour, you have to
    mask the function query_recover() to prevent multiplication. Also,
    armours (and weapons) have a 1/3 fail chance to recover even if they
    define query_recover(). The function query_may_recover() takes care of
    this. It is set at creation.

/std/board.c

    New board header format in table format, including the number of lines
    of the note. Auto-more when the note is too long. Automated note-
    generation from other code allowed, see create_note(). New functions
    to restrict access from boards.

/std/herb.c

    Added default recovery.

/std/know_me.c (MOVED to /obj)

/std/player_sec.c

    When a player looses his connection while being in combat, (s)he stays
    in the game for 3 minutes and then the actual linkdie function is called.
    Added catch() overhead to cloning and initializing stuff that autoloads
    or recovers. Relay support removed. Skill decay implemented by Rastlin
    for skills that are not currently trainable for the player at the level
    (s)he has them. This form of decay is time-dependant. [see skill_decay
    in /doc/man/technical]

/std/possob.c (MOVED to /obj)

/std/receptacle.c (NEW OBJECT)

    This object is a piffed up container. It defines commands 'open',
    'close', 'pick', 'lock' and 'unlock'.

/std/remote_npc.c (MOVED to /obj)

/std/spells.c

    Small changes to add_spell and remove_spell to work with the new
    /cmd/std/command_driver.c that are not that important externally.

/std/torch.c

    Default recovery added.

/std/weapon.c

    Added default recovery. For details, see section on /std/armour.c

/std/workroom.c

    Function load_board() returns the objectpointer to a possible board and
    the exit 'start' has been renamed to 'startloc' in order not to conflict
    with the apprentice 'start' command.

/std/board/bb_gedit.c (REMOVED)

/std/board/board_central.c (REMOVED)

    The functionality of this object has been moved into the mbs-tool.

/std/board/board_more.c (REMOVED)

    More was implemented in three places. Now it only resides in the player
    object.

/std/board/msg_input.c (REMOVED)

    Boards now also use the editor.

/std/board/old_bb_gedit.h (REMOVED)

/std/board/old_board.c (REMOVED)

/std/combat/cbase.c

    Critical hits implemented. They have a small chance of giving a lot of
    damage. They may even kill someone. Removed the printing of combat
    messages to non-interactive livings.

/std/guild/guild_lay_sh.c

    Added function query_guild_title_lay() that will return the layman title
    of the player. Function query_guild_trainer_lay() added for skill decay
    support.

/std/guild/guild_occ_sh.c

    Added function query_guild_title_occ() that will return the occupational
    title of the player. Function query_guild_trainer_occ() added for skill
    decay support.

/std/guild/guild_race_sh.c

    Added function query_guild_title_race() that will return the race-title
    of the player. Added function query_guild_family_name() to return true
    when the race-guild-name is actually a family name. Function
    query_guild_trainer_race() added for skill decay support.

/std/living/cmdhooks.c

    Removed a lot of overhead to make it faster. Extended the say command
    with a command 'say to' that will focus on one listener while the rest
    still hears it. Moved the communicate() function here.

/std/living/description.c

    Redone query_exp_title() to finally also use the first title in the list
    at SD_AV_TITLES. Also, this means that the highest title is not reached
    too soon. Removed query_format_presenstation()

/std/living/move.c (complete revision)

    This module has been recoded by Wizball from Muddy Waters to give it a
    15 per cent speed increase, thanks! The external functionality is about
    the same.

/std/living/savevars.c

    Moved the variables (and functions) for see_blood, age_heart and
    wiz_level to /std/player/savevars_sec.c since NPC's are not interested
    in them. Function query_title() is nomask now. Guilds may not mask it
    anymore since the order of the guild-titles is static, race, occ and
    lay. Set ghost m_in and m_out in set_ghost() to gain speed. Function
    adjust_alignment() added to allow adjustment of alignment of a player
    due to a quest. New function valid_change_soul() to check whether it is
    legal to modify the souls of a wizard. set_skill() is logged if the
    target is not the interactive player him/herself.

/std/living/wizstat.c

    Altered the statistics displayed somewhat.

/std/player/cmd_sec.c

    Player is not allowed to quit anymore when (s)he is in combat. At least
    not actively using the 'quit' command.

/std/player/more.c (NEW FILE)

    More used to be implemented in three places. 1) /std/board/board_more,
    2) /lib/more and 3) in the player object. The last has stayed, though
    now has its own module included in the player object and better
    functionality than it used to have here.

/std/player/pcombat.c

    While the player is linkdead, but is still in fighting in the game, no
    new combat may be initiated.

/std/player/quicktyper.c (general revision)

    History stuff kicked out. The quicktyper is not linked externally any
    more, but included in the player object. Only the '%%' (repeat last
    command) command is kept. Do-sequences are no longer possible while the
    player is in combat.

/std/player/savevars_sec.c

    New variable last_skill_decay that keeps the age-heart when the skills
    were last decayed. Removed obsolete function num_bit(). The function
    query_wiz_level() now returns only 1/0 indicating that the player is a
    wizard or now. Support functions for the skill-decay system added by
    Rastlin.

/std/room/exits.c

    Fifth optional argument to add_exit() that will allow to determine show
    or no-show on each exit individually. Also, the first argument will now
    take a filename without path, to point to a file in the same directory.
    These changes have also been changed in the other room modules where
    necessary. Both the fourth and fifth argument are now only stored in a
    virtual array, that is, the array is not created unless non-default values
    are used. Thanks to Synergy.

/sys/adverbs.h (NEW FILE)

    Several general macros for adverb manipulation. It allows for easy
    recognition and expansion of adverbs.

/sys/bb_gedit.h (REMOVED)

/sys/exec.h (NEW FILE)

    This file contains various very general definitions that will always
    be included in your exec_obj.c when you do 'exec'. They will be included
    after your personal file in ~/<wizard-name>.h. Ideas by Aridor.

/sys/filters.h

    New filters FILTER_SHOWN (code already existed), FILTER_GENDER,
    FILTER_RACE and FILTER_CAN_SEE_IN_ROOM added. Adjusted FILTER_DEAD and
    FILTER_OTHER_LIVE since it is not necessary to test for respectively
    destructed and not equal to this_player() for each call to the actual
    filter. This means that calls must use the macro and cannot use call
    the filter-function directly. New macro FILTER_REAL_PLAYERS.

/sys/formulas.h

    New formulas for F_MAX_HP and F_KILL_GIVE_EXP. Thanks to Maniac and
    Olorin.

/sys/log.h

    New definitions for the report commands and for some new logs we added.

/sys/login.h (NEW FILE)

    Reference from /sys to the file /config/login/login.h because all .h
    files should be accessible through /sys.

/sys/macros.h

    New macros ALPHABET (obvious), OB_NAME(ob) to identify an object by its
    unique name, FORMAT_NAME(name) to format a name in a string of 11
    characters.

/sys/mail.h (NEW FILE)

    This file contains some definitions for the mail system, including the
    explanation of the file structure.

/sys/math.h

    New macros QUICK_FIND_EXP (code already existed), BIN2DEC (convert a
    binary array to decimal), DEC2BIN (convert a decimal to a binary array)
    and NAME_TO_RANDOM, which is a random generator, that will return the
    same number for a certain combination of player name and seed. This
    function is added since not all unix-platforms return the same random
    number for each combination of range and seed if you use the efun
    random().

/sys/stdproperties.

    New properties CORPSE_AS_KILLER, LIVE_I_SNEAK, LIVE_M_MOUTH_BLOCKED,
    TEMP_OBJ_ABOUT_TO_DESTRUCT.

/sys/time.h (NEW FILE)

    This provides a front with a few macros that help you converting time.
    Supported are CONVTIME(t), TIME2STR(t, s) and TIME2NUM(t).

/sys/global/ADVERBS (NEW FILE)

    This is the save-file from the adverbs registry object. It contains a
    large collection (over 350) of generally applicable adverbs. The format
    is a lineair text-file with the adverbs separated by newlines.

/sys/global/adverbs.c (NEW OBJECT)

    The actual code for the definitions in adverbs.h.

/sys/global/filters.c (REMOVED)

/sys/global/math.c

    The implementation of the new macros in math.h and a new implementation
    of square_root using floats.

/sys/global/time.c (NEW FILE)

    This is the old /lib/time.c. The convtime() function is the same. New
    are functions to convert a time in seconds to a formatted string with
    one up till four significant time-elements.
