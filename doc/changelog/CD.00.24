/lib/d/Standard/obj/mail_reader
	New mailreader installed. It uses a new file format and has some new
	features, for example group mail to domains, arches etc. It
	automatically converts files of the old format.

/sys/macros.h
	Added an OBJ_NUM macro. Don't use it for objects that are not
	cloned.

/std/player/savevars_sec.c
	Made pack_bits and unpack_bits nomask. Security reasons.

/std/coins.c
	Added support for assessment skill.	

/cmd/std/misc_cmd.c
	Light was incorrectly treated. Negative values of light are now
	darkness.

/lib/guild_support.c
	Fixed bug in assess code.

/secure/simul_efun.c
	say() tells the inventory of objects in the same room as well.

/secure/master.c
	finger_player() now sets the adjectives correctly.

/d/Standard/login/ghost_player.c
	query_race() has been added. It returns the string 'ghost'.

/secure/login.
	query_race() has been added. It returns the string 'logon'.

/std/shadow.c
	remove_object deleted, shadows must be destructed. This was to 
	take away the bug that removing a shadow removed the shadowee.

/std/living.c	
	Dworkins 'encounter' strategy used instead of init. It should be
	backwards compatible. Instead of calling init in encountered
	objects, encounter is called in the living object and it is up
	to that function to call init in the object. The object is 
	passed as parameter to encounter.

/std/object.c
	remove_object() now recursively calls remove_object in all the
	inventory of a removed item. The GD automatically destructs all
	the inventory otherwise, without any necessary calls in remove_object
	getting executed.
/std/corpse.c
	Changed as a result of the change in /std/object. We have to manually
	move everything to the environment of the corpse when it rots away.

/cmd/wiz_cmd_normal.c
	New functions that handle multiple files with single command
	Commands: cp, mv, rm
	Made by Tero.Pelander@utu.fi

/sys/cmdparse.h /sys/global/cmdparse.c /cmd/std/misc_cmd.c
	Fixed a special visible_access that filters out this_player() from
	what is seen with 'look at' if there is more things than this_player()
	in the list of things that are seen. This will make things like
	'look at humans' not include oneself if one is human and not the only
	human around.

/cmd/wiz_cmd_normal.c
	Changed clone and load so you get a message instead of an entry
	in the error log if you try to load/clone a non existant file.

/d/Standard/login/ghost_player.c
	Added setting of login point so the different races go to their
	own locations.

/cmd/wiz_cmd_apprentice.c /sys/global/manpath.c /sys/global/srcman.c
	Reworked the 'man' command. There are now three:
	'man'
		Gives information from /doc/man
		This is everything except source code.
	'sman'	
		Gives information on the source code in the standard
		mudlib, created under /doc/sman
	'lman'
		Gives information on source code in any directory. That
		is, wizards can create their own documentation directories
		and and access them with 'lman' just like 'sman' accesses
		the docs on the standard mudlib.

A set of patches from Data@Padermud

        - /cmd/std/misc_cmd.c:
                New stop code written by Left of Hyperborea.
        - /cmd/wiz_cmd_apprentice.c:
                Fix for finger of someone in a domain with no lord.
        - /cmd/wiz_cmd_arch.c:
                Typo in allow_temp. break_string in show_....
        - /cmd/wiz_cmd_normal.c, /doc/help/wizard/sanction,
          /secure/master.c:
                Expanded sanction, so that lords can give away read access
                for their domain. Introduced wizard types in sanction.
        - /secure/master.c:
                Added ".c" to test in add_temp_start_loc
        - /std/combat/cbase.c:
                fix for combatstat.
        - /std/living/combat.c:
                Wizards should'nt die in do_die.
        - /std/living/savevars.c:
                log alignment setting only for interactives.
        - /std/player/savevars_sec.c:
                set_player_file should be public for race changes.
                0 should be a valid temp_start_location.

/secure/master
	get_ed_buffer_save_file_name must use this_player() because it
	is called from remove_interactive which sets command_giver.
	There must be not error here, it will make the GD dump.

/cmd/wiz_cmd_apprentice.c
	Added pushd, popd, dirs + documentation in the help dir.

/std/mobile.c /std/monster.c
	Moved init_living with the automatic attack initializer from
	monster to mobile.

/std/board.c
	added query_latest_note(), which returns the filename of the last
	note on the board. Since the filename contains the time when the note
	was written you can use it to see if there have been any changes
	since last time you lokked at the board.

/cmd/wiz_cmd_normal.c
	Applied patches from Tero Pelander, multi-file 'mv', 'cp' and 'rm'.
	Added 'du' (written by Surak).

/cmd/std/quicktyper.c
	New version by Plugh.

/d/Standard//obj/mail_reader.c
	New version by Tricky. Will automatically convert old mail to new
	format.

/std/player/cmd_sec.c
	Security fix in set_cmdmodify(). Only the user and "root" can
	enter command modifers. 

/std/player_sec.c
	Startup sequence for the quicktyper added.

/cmd/std/quicktyper.c
	Command initializing code added for security in cmd_sec and player_sec.

/std/living.c
/std/living/tasks.c
/sys/tasks.h
	Added support for skillbased task resolution. See 
	/doc/man/general/tasks for more information.

/std/living/combat.c
/std/living/cmdhooks.c
/std/living/heart_beat.c
	You now have top concentrate a short period of time before being able
	to cast a spell.

/std/combat/cbase.c
	Fighting is slower now, every second heart beat. If set_quickness() is
	called a player can fight quicker, or slower.

/cmd/std/tracer_tool.c
	Changed so you can list properties in an object and call functions
  	that are only defined in a shadow of an object.

/std/living/savevars.c
/sys/drink_eat.h
/std/living/drink_eat.c
/std/combat/cbase.c
	Changed formulas for fatigue. You now have 50 + STR fatigue points
	instead of 10 * STR. You recover fatigue at the rate of
	10 + percent stuffed / 3 per 10 heartbeats instead of
	1 + percent stuffed / 3. You can also eat 1/8 of max in one gulp
	instead of 1/15. This should make players run out of speed faster
	if they run around too much, but they should also recover faster.
