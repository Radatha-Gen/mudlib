/sys/formulas.h	Change F_KILL_GIVE_EXP to 4 * av_stat * av_stat since 
		combat exp is so heavily reduced by the quest_exp /combat_exp
		comparation.

/sys/ss_types.h	Old obsolete spellskills totally removed from ss_types.h

/secure/login.c /secure/master.c /secure/master/notify.c 
/cmd/wiz_cmd_apprentice.c /std/player/cmd_sec.c /std/player/savevars_sec.c
and your local statue if used.
		All modified to work with the new wiz command 'notify'. It
		will notify you if people log on and off or go link dead if
		you please. Thanks to Falke at Angalon for this.

/std/object.c & /std/room/link.c   Link rooms now have the same items in
		them as the main room, add_item() that is

/std/combat/humunarmed.c	Now uses hopefully better formulas to
		calculate hit and pen values for unarmed combat. cb_add_attck()
		has been updated so it can take a skill argument as well.

A lot more man files have been written. See /doc/man/properties and the
		directory formulas there.

/std/herb & /std/torch	Have gotten query_torch_recover() and
		query_herb_recover() to support recovering more easy.

/std/food & /std/drink	Are now heap objects

/lib/shop.c	written

/lib/skill_raise.c & /lib/guild_support.c   Rewritten and improved, but they
		are NO LONGER BACKWARDS COMPATIBLE. Small changes are needed
		though. The function sk_init() has been removed and create
		functions need to be called. create_skill_raise() and 
		create_guild_support(). sk_add_train() has gotten changed
		arguments. Call init_guild_support() and init_skill_raise()
		from init() in the rooms to use default commands.

/sys/global/language.c & /sys/language.h	Functions for odinal numbers
		added. Thanks Napture

/lib/pub.c	written

/secure/master.c & /cmd/wiz_cmd_apprentice	people -s fixed better and
		people S as well.

/std/object.c /std/weapon.c /std/armour.c	Recovering procedures 
		written. Player files too changed to support this. Objects
		recover if armageddon is out in the world, or if player
		stands on a starting locations

stdproperties.h	Several resistance properties added

/secure/docmake.c	Removed a bug so it now makes correct docs and
		doesn't skip functions every now and then.

/secure/master.c & wiz_cmd_arch.c	Added rmdefault and rmtemp commands
		to make it possible to remove default and temporarily
		startlocations.

things.c	get from containers & exa 0 does not produce so strange
		results as earlier

object.c	subloction doesn't change of the object unless it's truly 
		moved now.

cbase.c, mobile.c	special_attack() is called in mobile.c each heart_
		beat from cbase.c in npc:s. An easy way to redefine special
		attacks or spell casting for npc:s

/secure/master/fob.c wiz_cmd_arch.c   A rmapp command has been added to be
		able to remove applications from nonexisting wizards to a
		nonexisting domain in an easy way.

soul_cmd.c	Gone through the file so all emotions work fairly well 
 		together with the adverbs.

The new player scene has been debugged, mostly there were errors in the 
		redefinition of long(). bug, typo, idea, praise and sysbug 
		commands should be available there now too.

composite.c	It takes care of heaps with the same short description.

food, drinks, potions and herbs are now heap objects.

sman, man	Commands have been improved, more error messages and more
		docs to find under man command especially. sman -s query_item
		works :)

cmdparse.c and composite.c normally filters out things you cannot see. Both
		have hooks if you want to be able to issue commands on unseen
		objects. For example, drop all should drop stuff you cannot
		see, and you should be able to remove unseen armours.....
		composite normally reaturns 'something' if one cannot see
		anything of the listen items. You can send a flag to composite
		to make it return 0 if you want instead.

NPC_M_NO_ACCEPT_GIVE	Npc:s don|t accept given objects as default because
		one fights worse if one is loaded, and players then to load
		the mobiles.

herb.c and potion.c uses /lib/herb_support.c so they have the same syntax to
		set up effects.

ask		the command ask is added, and it's possible to use the function
		add_ask() much like add_item() to let your mobiles react on
		questions. And '.' or '?' in the end is removed from the
		question.

tradestat	If the shop uses the trade object you can use this command to
		see the trade settings

notify_you_killed_me() Called from do_die() in the living when it dies, in its
		killer.

notify_enemy_gone()	Called when a mobile is forced to switch enemy because
		the old one is not here anylonger for some reason.

/lib/bank.c	Support for bank is here. Make the bank code much shorter.

